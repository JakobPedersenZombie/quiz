{"ast":null,"code":"import ChatComponent from './ChatComponent.vue';\nexport default {\n  data() {\n    return {\n      questions: [{\n        id: 1,\n        title: \"What is the capital of France?\",\n        answers: [{\n          id: 1,\n          text: \"Paris\",\n          correct: true\n        }, {\n          id: 2,\n          text: \"London\"\n        }, {\n          id: 3,\n          text: \"Berlin\"\n        }]\n      }, {\n        id: 2,\n        title: \"What is the largest planet in our solar system?\",\n        answers: [{\n          id: 4,\n          text: \"Jupiter\",\n          correct: true\n        }, {\n          id: 5,\n          text: \"Saturn\"\n        }, {\n          id: 6,\n          text: \"Earth\"\n        }]\n      }, {\n        id: 3,\n        title: \"what duck has the most superpowers?\",\n        answers: [{\n          id: 7,\n          text: \"regular duck\",\n          correct: true\n        }, {\n          id: 8,\n          text: \"Superduck\"\n        }, {\n          id: 9,\n          text: \"bird\"\n        }]\n      }\n      // more questions\n      ],\n\n      question: {},\n      showAnswer: false,\n      answerMessage: \"\"\n    };\n  },\n  components: {\n    ChatComponent\n  },\n  buttonClicked: false,\n  // ... other data properties\n\n  mounted() {\n    // select a random question\n    this.question = this.questions[Math.floor(Math.random() * this.questions.length)];\n  },\n  created() {\n    this.nextQuestion();\n  },\n  methods: {\n    checkAnswer(answerId) {\n      const selectedAnswer = this.question.answers.find(answer => answer.id === answerId);\n      this.showAnswer = true;\n      if (selectedAnswer.correct) {\n        this.answerMessage = \"Correct!\";\n        this.correctAnswerSelected = true;\n      } else {\n        this.answerMessage = \"Nah man that ain't correct, you should know this, try again\";\n        this.correctAnswerSelected = false;\n      }\n    },\n    async nextQuestion() {\n      if (this.buttonClicked) {\n        this.showAnswer = false;\n        this.correctAnswerSelected = false;\n        this.currentAnswer = \"\";\n        // wait for 1 second before showing new question\n        await new Promise(resolve => setTimeout(resolve, 2000));\n        // select a random question\n        this.question = this.questions[Math.floor(Math.random() * this.questions.length)];\n      } else {\n        this.buttonClicked = true;\n      }\n    }\n  }\n};","map":{"version":3,"mappings":"AAkBA;AAIA;EACAA;IACA;MACAC,YACA;QAAAC;QAAAC;QAAAC;UAAAF;UAAAG;UAAAC;QAAA;UAAAJ;UAAAG;QAAA;UAAAH;UAAAG;QAAA;MAAA,GACA;QAAAH;QAAAC;QAAAC;UAAAF;UAAAG;UAAAC;QAAA;UAAAJ;UAAAG;QAAA;UAAAH;UAAAG;QAAA;MAAA,GACA;QAAAH;QAAAC;QAAAC;UAAAF;UAAAG;UAAAC;QAAA;UAAAJ;UAAAG;QAAA;UAAAH;UAAAG;QAAA;MAAA;MACA;MAAA,CACA;;MACAE;MACAC;MACAC;IACA;EACA;EAEAC;IACAC;EACA;EAGAC;EACA;;EAIAC;IACA;IACA;EACA;EAEAC;IACA;EACA;EAEAC;IACAC;MACA;MACA;MAEA;QACA;QACA;MACA;QACA;QACA;MACA;IACA;IAEA;MACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;MACA;QACA;MACA;IACA;EACA;AACA","names":["data","questions","id","title","answers","text","correct","question","showAnswer","answerMessage","components","ChatComponent","buttonClicked","mounted","created","methods","checkAnswer"],"sourceRoot":"src/components","sources":["HomePage.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h1>{{ question.title }}</h1>\r\n    <div v-for=\"answer in question.answers\" :key=\"answer.id\">\r\n      <button @click=\"checkAnswer(answer.id)\">{{ answer.text }}</button>\r\n    </div>\r\n    <p v-if=\"showAnswer\">{{ answerMessage }}</p>\r\n    <div v-if=\"correctAnswerSelected\">\r\n      <p>{{ currentAnswer }}</p>\r\n      <button @click=\"nextQuestion\">Next</button></div>\r\n      <chat-component v-if=\"correctAnswer\"></chat-component>\r\n  </div>\r\n  \r\n    \r\n</template>\r\n\r\n\r\n<script>\r\nimport ChatComponent from './ChatComponent.vue'\r\n\r\n\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      questions: [\r\n        { id: 1, title: \"What is the capital of France?\", answers: [{ id: 1, text: \"Paris\", correct: true }, { id: 2, text: \"London\" }, { id: 3, text: \"Berlin\" }] },\r\n        { id: 2, title: \"What is the largest planet in our solar system?\", answers: [{ id: 4, text: \"Jupiter\", correct: true }, { id: 5, text: \"Saturn\" }, { id: 6, text: \"Earth\" }] },\r\n        {id: 3, title: \"what duck has the most superpowers?\", answers: [{id: 7, text: \"regular duck\", correct: true }, { id: 8, text: \"Superduck\" }, { id:9, text: \"bird\"}]},\r\n         // more questions\r\n      ],\r\n      question: {},\r\n      showAnswer: false,\r\n      answerMessage: \"\"\r\n    }\r\n  },\r\n\r\n  components: {\r\n    ChatComponent\r\n  },\r\n  \r\n   \r\n        buttonClicked: false,\r\n        // ... other data properties\r\n    \r\n\r\n\r\n  mounted() {\r\n    // select a random question\r\n    this.question = this.questions[Math.floor(Math.random() * this.questions.length)]\r\n  },\r\n\r\n  created() {\r\n    this.nextQuestion()\r\n  },\r\n\r\n  methods: {\r\n    checkAnswer(answerId) {\r\n      const selectedAnswer = this.question.answers.find(answer => answer.id === answerId)\r\n      this.showAnswer = true\r\n      \r\n      if (selectedAnswer.correct) {\r\n        this.answerMessage = \"Correct!\"\r\n        this.correctAnswerSelected = true\r\n      } else {\r\n        this.answerMessage = \"Nah man that ain't correct, you should know this, try again\"\r\n        this.correctAnswerSelected = false\r\n      }\r\n    },\r\n    \r\n    async nextQuestion() {\r\n      if(this.buttonClicked) {\r\n      this.showAnswer = false\r\n      this.correctAnswerSelected = false\r\n      this.currentAnswer = \"\"\r\n      // wait for 1 second before showing new question\r\n      await new Promise(resolve => setTimeout(resolve, 2000))\r\n      // select a random question\r\n      this.question = this.questions[Math.floor(Math.random() * this.questions.length)]\r\n    } else {\r\n      this.buttonClicked = true\r\n    }\r\n  }\r\n}\r\n}\r\n</script>\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}