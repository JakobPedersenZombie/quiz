{"ast":null,"code":"export default {\n  data() {\n    return {\n      questions: [{\n        question: \"What is the capital of France?\",\n        answers: [{\n          text: \"Paris\",\n          correct: true\n        }, {\n          text: \"London\",\n          correct: false\n        }, {\n          text: \"Madrid\",\n          correct: false\n        }, {\n          text: \"Rome\",\n          correct: false\n        }]\n      }\n      // 9 more questions\n      ],\n\n      currentQuestion: {},\n      currentAnswer: \"\",\n      showQuestion: false,\n      showAnswer: false\n    };\n  },\n  created() {\n    this.nextQuestion();\n  },\n  methods: {\n    checkAnswer(answer) {\n      this.showAnswer = true;\n      this.showQuestion = false;\n      this.currentAnswer = answer.correct ? \"Correct!\" : \"Incorrect.\";\n    },\n    async nextQuestion() {\n      this.showAnswer = false;\n      this.showQuestion = true;\n      this.currentAnswer = \"\";\n      // wait for 1 second before showing new question\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      // select a random question\n      this.currentQuestion = this.questions[Math.floor(Math.random() * this.questions.length)];\n    }\n  }\n};","map":{"version":3,"mappings":"AAeA;EACAA;IACA;MACAC,YACA;QACAC;QACAC,UACA;UAAAC;UAAAC;QAAA,GACA;UAAAD;UAAAC;QAAA,GACA;UAAAD;UAAAC;QAAA,GACA;UAAAD;UAAAC;QAAA;MAEA;MACA;MAAA,CACA;;MACAC;MACAC;MACAC;MACAC;IACA;EACA;EACAC;IACA;EACA;EACAC;IACAC;MACA;MACA;MACA;IACA;IACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACA;EACA;AACA","names":["data","questions","question","answers","text","correct","currentQuestion","currentAnswer","showQuestion","showAnswer","created","methods","checkAnswer"],"sourceRoot":"src/components","sources":["HomePage.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h1>Quiz</h1>\r\n    <div v-if=\"showQuestion\">\r\n      <p>{{ currentQuestion.question }}</p>\r\n      <button v-for=\"answer in currentQuestion.answers\" @click=\"checkAnswer(answer)\">{{ answer.text }}</button>\r\n    </div>\r\n    <div v-if=\"showAnswer\">\r\n      <p>{{ currentAnswer }}</p>\r\n      <button @click=\"nextQuestion\">Next</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      questions: [\r\n        {\r\n          question: \"What is the capital of France?\",\r\n          answers: [\r\n            { text: \"Paris\", correct: true },\r\n            { text: \"London\", correct: false },\r\n            { text: \"Madrid\", correct: false },\r\n            { text: \"Rome\", correct: false }\r\n          ]\r\n        },\r\n        // 9 more questions\r\n      ],\r\n      currentQuestion: {},\r\n      currentAnswer: \"\",\r\n      showQuestion: false,\r\n      showAnswer: false\r\n    }\r\n  },\r\n  created() {\r\n    this.nextQuestion()\r\n  },\r\n  methods: {\r\n    checkAnswer(answer) {\r\n      this.showAnswer = true\r\n      this.showQuestion = false\r\n      this.currentAnswer = answer.correct ? \"Correct!\" : \"Incorrect.\"\r\n    },\r\n    async nextQuestion() {\r\n      this.showAnswer = false\r\n      this.showQuestion = true\r\n      this.currentAnswer = \"\"\r\n      // wait for 1 second before showing new question\r\n      await new Promise(resolve => setTimeout(resolve, 1000))\r\n      // select a random question\r\n      this.currentQuestion = this.questions[Math.floor(Math.random() * this.questions.length)]\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}